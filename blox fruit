-- Mock Player Testing Script
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

-- GUI Setup
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = player.PlayerGui

-- Main Frame
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 300, 0, 200)
mainFrame.Position = UDim2.new(0.5, -150, 0.5, -100) -- Center of the screen
mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
mainFrame.BackgroundColor3 = Color3.new(0, 0, 0) -- Black background
mainFrame.BorderSizePixel = 0
mainFrame.Parent = screenGui

-- Title Bar (for dragging)
local titleBar = Instance.new("Frame")
titleBar.Size = UDim2.new(1, 0, 0, 30)
titleBar.Position = UDim2.new(0, 0, 0, 0)
titleBar.BackgroundColor3 = Color3.new(0.1, 0.1, 0.1) -- Dark gray
titleBar.BorderSizePixel = 0
titleBar.Parent = mainFrame

-- Title
local title = Instance.new("TextLabel")
title.Size = UDim2.new(0.8, 0, 1, 0)
title.Position = UDim2.new(0.1, 0, 0, 0)
title.Text = "Testing Tool"
title.TextColor3 = Color3.new(0, 1, 1) -- Cyan text
title.BackgroundTransparency = 1
title.Font = Enum.Font.SourceSansBold
title.TextSize = 20
title.Parent = titleBar

-- Collapse/Expand Icon
local collapseIcon = Instance.new("TextButton")
collapseIcon.Size = UDim2.new(0, 30, 0, 30)
collapseIcon.Position = UDim2.new(1, -30, 0, 0)
collapseIcon.Text = "-"
collapseIcon.TextColor3 = Color3.new(0, 1, 1) -- Cyan text
collapseIcon.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2) -- Dark gray
collapseIcon.BorderSizePixel = 0
collapseIcon.Parent = titleBar

-- Speed Hack Slider
local speedSlider = Instance.new("TextButton")
speedSlider.Size = UDim2.new(0.8, 0, 0, 30)
speedSlider.Position = UDim2.new(0.1, 0, 0.2, 0)
speedSlider.Text = "Speed Hack: 100"
speedSlider.TextColor3 = Color3.new(0, 1, 1) -- Cyan text
speedSlider.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2) -- Dark gray background
speedSlider.BorderSizePixel = 0
speedSlider.Parent = mainFrame

local speedValue = 100
speedSlider.MouseButton1Click:Connect(function()
    speedValue = speedValue + 50
    if speedValue > 300 then
        speedValue = 100
    end
    speedSlider.Text = "Speed Hack: " .. speedValue
    humanoid.WalkSpeed = speedValue
end)

-- Locate Player Button
local locateButton = Instance.new("TextButton")
locateButton.Size = UDim2.new(0.8, 0, 0, 30)
locateButton.Position = UDim2.new(0.1, 0, 0.4, 0)
locateButton.Text = "Locate Player"
locateButton.TextColor3 = Color3.new(0, 1, 1) -- Cyan text
locateButton.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2) -- Dark gray background
locateButton.BorderSizePixel = 0
locateButton.Parent = mainFrame

local locateEnabled = false
local highlights = {} -- Store highlights for easy removal
locateButton.MouseButton1Click:Connect(function()
    locateEnabled = not locateEnabled
    if locateEnabled then
        -- Highlight all players within 30,000 studs
        for _, otherPlayer in pairs(game.Players:GetPlayers()) do
            if otherPlayer ~= player and otherPlayer.Character then
                local distance = (otherPlayer.Character.PrimaryPart.Position - character.PrimaryPart.Position).Magnitude
                if distance <= 30000 then
                    local highlight = Instance.new("Highlight")
                    highlight.Parent = otherPlayer.Character
                    highlights[otherPlayer] = highlight
                end
            end
        end
        locateButton.Text = "Locate Player: ON"
    else
        -- Remove highlights from all players
        for otherPlayer, highlight in pairs(highlights) do
            highlight:Destroy()
        end
        highlights = {}
        locateButton.Text = "Locate Player: OFF"
    end
end)

-- Aimbot Button
local aimButton = Instance.new("TextButton")
aimButton.Size = UDim2.new(0.8, 0, 0, 30)
aimButton.Position = UDim2.new(0.1, 0, 0.6, 0)
aimButton.Text = "Aimbot"
aimButton.TextColor3 = Color3.new(0, 1, 1) -- Cyan text
aimButton.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2) -- Dark gray background
aimButton.BorderSizePixel = 0
aimButton.Parent = mainFrame

local aimEnabled = false
aimButton.MouseButton1Click:Connect(function()
    aimEnabled = not aimEnabled
    if aimEnabled then
        aimButton.Text = "Aimbot: ON"
        -- Simulate aiming at the nearest player
        while aimEnabled do
            local nearestPlayer = nil
            local nearestDistance = math.huge

            for _, otherPlayer in pairs(game.Players:GetPlayers()) do
                if otherPlayer ~= player and otherPlayer.Character then
                    local distance = (otherPlayer.Character.PrimaryPart.Position - character.PrimaryPart.Position).Magnitude
                    if distance < nearestDistance then
                        nearestDistance = distance
                        nearestPlayer = otherPlayer
                    end
                end
            end

            if nearestPlayer then
                -- Simulate aiming by printing the nearest player's name
                print("Aiming at: " .. nearestPlayer.Name)
                -- Optional: Rotate the player's character to face the nearest player
                character:SetPrimaryPartCFrame(CFrame.lookAt(character.PrimaryPart.Position, nearestPlayer.Character.PrimaryPart.Position))
            end
            wait(1) -- Check every second
        end
    else
        aimButton.Text = "Aimbot: OFF"
    end
end)

-- Draggable UI with Boundary Checks
local dragging = false
local dragInput, dragStart, startPos

local function clampPosition(position)
    local screenSize = workspace.CurrentCamera.ViewportSize
    local frameSize = mainFrame.AbsoluteSize
    return UDim2.new(
        math.clamp(position.X.Scale, 0, 1 - frameSize.X / screenSize.X),
        math.clamp(position.X.Offset, 0, screenSize.X - frameSize.X),
        math.clamp(position.Y.Scale, 0, 1 - frameSize.Y / screenSize.Y),
        math.clamp(position.Y.Offset, 0, screenSize.Y - frameSize.Y)
    )
end

titleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = mainFrame.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

titleBar.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

game:GetService("UserInputService").InputChanged:Connect(function(input)
    if dragging and input == dragInput then
        local delta = input.Position - dragStart
        local newPosition = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        mainFrame.Position = clampPosition(newPosition)
    end
end)

-- Collapse/Expand UI
local isCollapsed = false
local buttons = {speedSlider, locateButton, aimButton} -- Store buttons for easy hiding
collapseIcon.MouseButton1Click:Connect(function()
    isCollapsed = not isCollapsed
    if isCollapsed then
        mainFrame.Size = UDim2.new(0, 300, 0, 30) -- Collapse to title bar only
        collapseIcon.Text = "+"
        -- Hide all buttons
        for _, button in pairs(buttons) do
            button.Visible = false
        end
    else
        mainFrame.Size = UDim2.new(0, 300, 0, 200) -- Expand to full size
        collapseIcon.Text = "-"
        -- Show all buttons
        for _, button in pairs(buttons) do
            button.Visible = true
        end
    end
end)
